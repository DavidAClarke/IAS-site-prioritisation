d <- d$V13
d <- paste(d, "--use-threads=4")
write.table(d, file = paste0(zonation_path, "/", "species_wgt_new_scheme_1_CAZ_proj","/",
variant@name,".bat"), sep = " ", col.names = F,
row.names = F, append = F, quote = F)
#run
run_bat(paste0(zonation_path, "/", "species_wgt_new_scheme_1_CAZ_proj","/",variant@name,
".bat"), exe = "zig4")
## Zonation 5 files
feature_list <- data.frame(weight = spp_list$scheme_1,
filename = list.files(species_path ,full.names = T))
head(feature_list)
View(feature_list)
as.double(feature_list$weight)
as.numeric(feature_list$weight)
fileConn <- file(paste0(zonation_path,"/","features.txt"))
writeLines(feature_list, fileConn)
write.table(feature_list, file = here("features.txt"))
write.table(feature_list, file = here("features.txt"), row.names = F)
?as.double
as.double(1)
1+.0
noquote(format(1, digits=2, nsmall=2))
noquote(format(spp_list$scheme_1, digits=2, nsmall=2))
## Zonation 5 files
# fyi feature list is also where you specify groups
feature_list <- data.frame(weight = noquote(format(spp_list$scheme_1, digits=2, nsmall=2)),
filename = list.files(species_path ,full.names = T))
write.table(feature_list, file = here("features.txt"), row.names = F)
## Zonation 5 files
# fyi feature list is also where you specify groups
feature_list <- data.frame(weight = as.numeric(format(spp_list$scheme_1, digits=2, nsmall=2)),
filename = list.files(species_path ,full.names = T))
View(feature_list)
as.numeric(format(spp_list$scheme_1, digits=2, nsmall=2))
as.numeric(format(1, digits=2, nsmall=2))
(format(1, digits=2, nsmall=2))
## Zonation 5 files
# fyi feature list is also where you specify groups
feature_list <- data.frame(weight = as.numeric(format(spp_list$scheme_1, digits=2, nsmall=2)),
filename = list.files(species_path ,full.names = T))
write.table(feature_list, file = here("features.txt"), row.names = F)
## Zonation 5 files
# fyi feature list is also where you specify groups
feature_list <- data.frame(weight = head(as.numeric(format(spp_list$scheme_1, digits=2, nsmall=2))),
filename = head(list.files(species_path ,full.names = T)))
write.table(feature_list, file = here("features.txt"), row.names = F)
run_file <- "@setlocal
@PATH=C:\Program Files (x86)\Zonation5;%PATH%
run_file <-
"@setlocal
@PATH=C:\Program Files (x86)\Zonation5;%PATH%
run_file <-
"@setlocal
@PATH=C:\Program Files (x86)\Zonation5;%PATH%
rm(list = ls())
r <- raster(here("rankmap.tif"))
r
plot(r)
rm(r)
#Project path
zonation_path <- here("zonation")
#Input data file path
#Input_data_path <- "G:/FromCluster/Zonation/Input_data"
Input_data_path <- here()
#Input data (raster) paths (species or species+area)
#species_path <- paste0(Input_data_path,"/", "species_lowres")
species_area_path <- paste0(Input_data_path,"/", "species_lowres")
spp_list <- read.csv(here(zonation_path, "spp_area_list_upd.csv"))
######################### Testing ############################
# areas <- c("Ecosystem", "Community","Ramsar", "Upstream")
spp_list <- spp_list %>% filter(acceptedName != "Morelia spilota") #&
## Zonation 5 files
# fyi feature list is also where you specify groups
feature_list <- data.frame(weight = spp_list$scheme_1,
group = spp_list$classGroupNum,
filename = list.files(species_area_path, full.names = T))
spp_list$classGroupNum
length(spp_list$classGroupNum)
length(spp_list$scheme_1)
#Input data (raster) paths (species or species+area)
#species_path <- paste0(Input_data_path,"/", "species_lowres")
species_area_path <- paste0(Input_data_path,"/", "species_area_lowres")
######################### Testing ############################
# areas <- c("Ecosystem", "Community","Ramsar", "Upstream")
spp_list <- spp_list %>% filter(acceptedName != "Morelia spilota") #&
## Zonation 5 files
# fyi feature list is also where you specify groups
feature_list <- data.frame(weight = spp_list$scheme_1,
group = spp_list$classGroupNum,
filename = list.files(species_area_path, full.names = T))
write.table(feature_list, file = here("features.txt"), row.names = F)
r <- raster(here("rankmap.tif"))
r
plot(r)
r <- raster(here("zonation", "species_area_wgt_sc1_CAZMAX_proj", "output", "rankmap.tif"))
plot(r)
species_path <- here("species_lowres")
species_path
dir.create(here(zonation_path, "species_CAZMAX", "output"))
dir.create(here(zonation_path, "species_CAZMAX", "output"), recursive = T)
rm(list = ls())
pkgs <- c("tidyverse", "here")
lapply(pkgs, require, character.only = T)
zonation_path <- here("zonation")
species_path <- here("species_lowres")
species_area_path <- here("species_area_lowres")
dir.create(here(zonation_path, "species_scenarios"))
dir.create(here(zonation_path, "species_area_scenarios"))
## Species only scenarios
spp_list <- read.csv(here(zonation_path, "maxent_spp_list_upd.csv")) %>%
filter(acceptedName != "Endospermum myrmecophilum" &
acceptedName != "Ozimops petersi") #files are corrupted
View(spp_list)
weight_df <- spp_list[,11:15]
View(weight_df)
weight_df <- data.frame(equal = rep(1, nrow(spp_list)), weight_df)
View(weight_df)
names(weight_df)
nm <- names(weight_df)
paste("species",nm, collapse = "_")
paste("species",nm[1], collapse = "_")
paste("species",nm[1], sep = "_")
rm(weight_df)
weight_df <- data.frame(equal = rep(1, nrow(spp_list)), spp_list[,11:15])
View(weight_df)
ff <- dir.create(here("test","test"), recursive = T)
ff
?dir.create
here(variant_path, paste("species",nm[1],".z5", sep = "_"))
names(weight_df[,1])
names(weight_df)
names(weight_df)[1]
nm <- names(weight_df)[1]
variant_path <- here(zonation_path, "species_scenarios", paste("species",nm, sep = "_"))
here(variant_path, paste("species",nm,".z5", sep = "_"))
here(variant_path, paste0("species_",nm,".z5"))
paste("feature list file = ", here(variant_path,"features.txt"))
# CAZMAX is equivalent to CAZ in Zonation V4
weight_df <- data.frame(equal = rep(1, nrow(spp_list)), spp_list[,11:15])
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_scenarios", paste0("species_",nm), "output"), recursive = T)
variant_path <- here(zonation_path, "species_scenarios", paste0("species_",nm))
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste("feature list file = ", here(variant_path,"features.txt"))
fileConn <- file(here(variant_path, paste0("species_",nm,".z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_scenarios", paste0("species_",nm), "output"), recursive = T)
variant_path <- here(zonation_path, "species_scenarios", paste0("species_",nm))
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste("feature list file =", here(variant_path,"features.txt"))
fileConn <- file(here(variant_path, paste0("species_",nm,".z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_scenarios", paste0("species_",nm), "output"), recursive = T)
variant_path <- here(zonation_path, "species_scenarios", paste0("species_",nm))
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste("feature list file =", here(variant_path,"features.txt"))
fileConn <- file(here(variant_path, paste0("species_",nm,".z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
?here
r <- terra::rast(here(zonation_path, "species_scenarios", "species_equal", "output", "rankmap.tif"))
plot(r)
terra::plot(r)
r2 <- terra::rast(here(zonation_path, "species_scenarios", "species_weight", "output", "rankmap.tif"))
terra::plot(r2)
r
rm(r, r2)
## Species area scenarios
spp_list <- read.csv(here(zonation_path, "spp_area_list_upd.csv")) %>%
filter(acceptedName != "Morelia spilota") #files are corrupted
weight_df <- data.frame(equal = rep(1, nrow(spp_list)), spp_list[,11:15])
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_area_scenarios", paste0("species_area_",nm)))
variant_path <- here(zonation_path, "species_area_scenarios", paste0("species_area_",nm))
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_area_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste("feature list file =", here(variant_path,"features.txt"))
fileConn <- file(here(variant_path, paste0("species_area_",nm,".z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
gg <-
"@setlocal"
gg <-
"@setlocal\n@P"
gg <-
"@setlocal/n@P"
gg
gg <-
"@setlocal
@P"
gg <- "@setlocal
@PATH=C:\Program Files (x86)\Zonation5;%PATH%
gg <- "@setlocal
@PATH=C:\\Program Files (x86)\Zonation5;%PATH%
gg <- "@setlocal
@PATH=C:\\Program Files (x86)\\Zonation5;%PATH%
z5_16bit -wg -b --mode=CAZMAX C:\Users\david\Documents\postdoc\projects\site_prioritisation\IAS-site-prioritisation\zonation\species_scenarios\species_scheme_1\species_scheme_1.z5 C:\Users\david\Documents\postdoc\projects\site_prioritisation\IAS-site-prioritisation\zonation\species_scenarios\species_scheme_1\output
gg <- "@setlocal
@PATH=C:/Program Files (x86)\Zonation5;%PATH%
fl <- paste("feature list file =", here(variant_path,"features.txt"))
mask_path <- "C:\Users\david\Documents\postdoc\projects\site_prioritisation\IAS-site-prioritisation\KBA_hiermask_inv.tif"
here()
mask_path <- here("KBA_hiermask_inv.tif")
hl <- paste("hierarchic mask layer =", mask_path)
paste(fl, hl, sep = "\n")
cat(paste(fl, hl, sep = "\n"))
rm(list = ls())
zonation_path <- here("zonation")
species_path <- here("species_lowres")
species_area_path <- here("species_area_lowres")
## Species only scenarios
spp_list <- read.csv(here(zonation_path, "maxent_spp_list_upd.csv")) %>%
filter(acceptedName != "Endospermum myrmecophilum" &
acceptedName != "Ozimops petersi") #files are corrupted
# CAZMAX is equivalent to CAZ in Zonation V4
weight_df <- data.frame(equal = rep(1, nrow(spp_list)), spp_list[,11:15])
## With KBA mask
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_scenarios", paste0("species_",nm,"_KBA")))
variant_path <- here(zonation_path, "species_scenarios", paste0("species_",nm, "_KBA"))
mask_path <- here("KBA_hiermask_inv.tif")
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste(
paste("feature list file =", here(variant_path,"features.txt")),
paste("hierarchic mask layer =", mask_path),
sep = "\n")
fileConn <- file(here(variant_path, paste0("species_",nm,"_KBA.z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
mask_path
library(terra)
plot(rast(mask_path))
r <- rast(mask_path)
r
class(r)
class(r[1])
class(getValues(r))
class(vals(r))
class(values(r))
is.int(r)
catalyze(r)
r
summary(r)
levels(r)
r
values(r)
here()
r2 <- rast("C:\Users\david\Documents\postdoc\projects\zonation5_manual_and_example_setups\example setups and data\data\hierarchic_mask.tif")
r2 <- rast("C:\\Users\\david\\Documents\\postdoc\\projects\\zonation5_manual_and_example_setups\\example setups and data\\data\\hierarchic_mask.tif")
r2
is.int(r2)
values(r2)
plot(r2)
as.int(r)
is.int(as.int(r))
plot(as.int(r))
writeRaster(as.int(r), filename = here("hierarchic_mask.tif"))
gc()
## With KBA mask
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_scenarios", paste0("species_",nm,"_KBA")))
variant_path <- here(zonation_path, "species_scenarios", paste0("species_",nm, "_KBA"))
mask_path <- here("hierarchic_mask.tif")
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste(
paste("feature list file =", here(variant_path,"features.txt")),
paste("hierarchic mask layer =", mask_path),
sep = "\n")
fileConn <- file(here(variant_path, paste0("species_",nm,"_KBA.z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
## With KBA mask
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_scenarios", paste0("species_",nm,"_KBA")))
variant_path <- here(zonation_path, "species_scenarios", paste0("species_",nm, "_KBA"))
mask_path <- here("hierarchic_mask.tif")
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste(
paste("feature list file =", here(variant_path,"features.txt")),
paste("hierarchic mask layer =", mask_path),
sep = "\n")
fileConn <- file(here(variant_path, paste0("species_",nm,"_KBA.z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
mask_path <- here("hierarchic_mask.tif")
rast(mask_path)
is.int(rast(mask_path))
?writeRaster
writeRaster(as.int(r), filename = here("hierarchic_mask.tif"), datatype = "INT1U")
writeRaster(as.int(r), filename = here("hierarchic_mask.tif"), datatype = "INT1U", overwrite = T)
###############################################################################
## Species area scenarios
spp_list <- read.csv(here(zonation_path, "spp_area_list_upd.csv")) %>%
filter(acceptedName != "Morelia spilota") #files are corrupted
weight_df <- data.frame(equal = rep(1, nrow(spp_list)), spp_list[,11:15])
## With KBA mask
for(i in 1:ncol(weight_df)){
nm <- names(weight_df)[i]
dir.create(here(zonation_path, "species_area_scenarios", paste0("species_area_",nm,"_KBA")))
variant_path <- here(zonation_path, "species_area_scenarios", paste0("species_area_",nm, "_KBA"))
mask_path <- here("hierarchic_mask.tif")
feature_list <- data.frame(weight = weight_df[,i],
group = spp_list$classGroupNum,
filename = list.files(species_area_path, full.names = T))
write.table(feature_list,
file = here(variant_path,"features.txt"), row.names = F)
Settings <- paste(
paste("feature list file =", here(variant_path,"features.txt")),
paste("hierarchic mask layer =", mask_path),
sep = "\n")
fileConn <- file(here(variant_path, paste0("species_area_",nm,"_KBA.z5")))
writeLines(Settings, fileConn)
close(fileConn)
}
pkgs <- c("tidyverse", "here")
lapply(pkgs, require, character.only = T)
sp_data <- "G:\FromCluster\Zonation\Input_data\species"
sp_data <- "G:/FromCluster/Zonation/Input_data/species"
list.files(sp_data)
spp_list <- read.csv(here(zonation_path, "maxent_spp_list_upd.csv"))
zonation_path <- here("zonation")
spp_list <- read.csv(here(zonation_path, "maxent_spp_list_upd.csv"))
feature_list <- data.frame(weight = spp_list$weight,
group = spp_list$classGroupNum,
filename = list.files(sp_data, full.names = T))
write.table(feature_list,
file = here(zonation_path,"features_1km.txt"), row.names = F)
Settings <- paste("feature list file =", here(zonation_path,"features_1km.txt"))
fileConn <- file(here(zonation_path, paste0("species_1km.z5")))
writeLines(Settings, fileConn)
close(fileConn)
spp_list <- spp_list %>% filter(acceptedName != "Stuckenia pectinata")
rs <- list.files(sp_data, full.names = T)
which(rs[str_detect(rs, "Stuckenia")])
rs[str_detect(rs, "Stuckenia")]
which(rs == rs[str_detect(rs, "Stuckenia")])
rs[-4751]
rs2 <- rs[-4751]
feature_list <- data.frame(weight = spp_list$weight,
group = spp_list$classGroupNum,
filename = rs2)
write.table(feature_list,
file = here(zonation_path,"features_1km.txt"), row.names = F)
install.packages("stars")
pkgs <- c("tidyverse", "sf", "terra", "stars", "here")
lapply(pkgs, require, character.only = T)
here()
rank_stack <- rast()
species_path <- "C:/Users/dcla0021/Documents/postdoc/projects/site_prioritisation/zonation/species_scenarios"
species_area_path <- "C:/Users/dcla0021/Documents/postdoc/projects/site_prioritisation/zonation/species_area_scenarios"
species_scenarios <- c("species_equal", "species_weight", "species_scheme_1",
"species_scheme_2", "species_scheme_3", "species_scheme_4",
"species_equal_KBA", "species_weight_KBA", "species_scheme_1_KBA",
"species_scheme_2_KBA", "species_scheme_3_KBA", "species_scheme_4_KBA")
which(species_scenarios == "species_equal")
which(species_scenarios == "species_weight")
fig_list <- list()
rank_stack <- rast()
for(sp in species_scenarios[1:2]){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_map(r)
gc()
}
## Priority rank map----
rank_plot <- function(rankmap){
ras_st <- stars::st_as_stars(rankmap)
ras_sf <- st_as_sf(ras_st)
fill_ras_sf <- st_drop_geometry(ras_sf)
ggplot()+
geom_sf(data = ras_sf, aes(fill=fill_ras_sf[,1]),
color=NA,
show.legend = T) +
scale_fill_gradientn(colours = z_colors_spectral$colors,
values = z_colors_spectral$values,
name = "Site\nsensitivity",
breaks = c(0.0, 0.2, 0.4, 0.6, 0.8,1)) +
theme_bw() +
theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank())
}
fig_list <- list()
rank_stack <- rast()
for(sp in species_scenarios[1:2]){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_map(r)
gc()
}
for(sp in species_scenarios[1:2]){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_plot(r)
gc()
}
z_colors_spectral <- list(values=c(0.0, 0.2, 0.5, 0.75, 0.9, 0.95, 0.98, 1.0),
labels=c("0.00-0.20", "0.20-0.50", "0.50-0.75",
"0.75-0.90", "0.90-0.95", "0.95-0.98",
"0.98-1.00"),
colors=c("#2b83ba", "#80bfab", "#c7e8ad", "#ffffbf",
"#fdc980", "#f07c4a", "#d7191c"))
fig_list <- list()
rank_stack <- rast()
for(sp in species_scenarios[1:2]){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_plot(r)
gc()
}
rank_stack
r[[1]]
fig_list
fig_list <- list()
rank_stack <- rast()
rm(r)
gc()
for(sp in species_scenarios){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
names(r[[ind]]) <- sp
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_plot(r)
}
r
rank_stack
rank_stack[[1]]
names(r[[1]])
names(r[[1]]) <- sp
r
rm(ind)
rm(sp)
rm(r)
fig_list <- list()
rank_stack <- rast()
for(sp in species_scenarios){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
names(r[[ind]]) <- sp
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_plot(r)
}
r
fig_list <- list()
rank_stack <- rast()
for(sp in species_scenarios){
ind <- which(species_scenarios == sp)
r <- rast(here(species_path, sp, "output", "rankmap.tif"))
names(r) <- sp
rank_stack <- c(rank_stack, r)
fig_list[[ind]] <- rank_plot(r)
}
??ggsave
getwd("..")
dirname(here())
here(dirname(here()), "figures")
ggsave(plot = fig_list[[1]], filename = "test", device = "pdf", path = here(), dpi = 300)
gc()
