classGroup %in% areas ~ 1+10,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ 2,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ 3,
threatStatus == "Endangered" &
!classGroup %in% areas ~ 4,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ 5,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ 6,
.default = weight))
spp_area_list_upd %>% mutate(scheme_5 = case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ 1,
threatStatus == "Least Concern" &
classGroup %in% areas ~ 11,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ 2,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ 3,
threatStatus == "Endangered" &
!classGroup %in% areas ~ 4,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ 5,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ 6,
.default = weight))
dd <- spp_area_list_upd %>% mutate(scheme_5 = case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ 1,
threatStatus == "Least Concern" &
classGroup %in% areas ~ 11,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ 2,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ 3,
threatStatus == "Endangered" &
!classGroup %in% areas ~ 4,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ 5,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ 6,
.default = weight))
View(dd)
unique(dd$scheme_5)
dd <- spp_area_list_upd %>% mutate(scheme_5 = case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ 1,
threatStatus == "Least Concern" &
classGroup %in% areas ~ 1 +10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ 2,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ 3,
threatStatus == "Endangered" &
!classGroup %in% areas ~ 4,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ 5,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ 6,
.default = weight))
unique(dd$scheme_5)
dd <- spp_area_list_upd %>% mutate(scheme_5 = case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ 1,
threatStatus == "Least Concern" &
classGroup %in% areas ~ 1 +10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ 2,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ 3,
threatStatus == "Endangered" &
!classGroup %in% areas ~ 4,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ 5,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ 6,
.default = weight)) %>%
mutate(scheme_5 = case_when(classGroup %in% areas ~ get(scheme_5) + 10, .default = get(scheme_5)))
get(scheme_5)
spp_area_wght_fun <- function(df, scheme = 1, wv = c(1,2,4,6,8,2)){
nm <- paste0("scheme_",scheme)
areas <- c("Ecosystem","Community","Ramsar","Upstream")
if(scheme == 1 | scheme == 3){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Least Concern" &
classGroup %in% areas ~ wv[1] + 10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Near Threatened" &
classGroup %in% areas ~ wv[2] + 10 ,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Vulnerable" &
classGroup %in% areas ~ wv[3] + 10 ,
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Endangered" &
classGroup %in% areas ~ wv[4] + 10 ,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Critically Endangered" &
classGroup %in% areas ~ wv[5] + 10 ,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
threatStatus == "Data Deficient" &
classGroup %in% areas ~ wv[6] + 10 ,
.default = weight)) #%>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ get(!!weight)))
}
if(scheme == 2 |scheme == 4){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
.default = weight)) %>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ weight)) %>%
mutate({{nm}} := case_when(code == "8.1.1" | code == "8.1.2" ~ get(!!nm) + 1,
.default = get(!!nm))) %>%
mutate({{nm}}) := case_when(classGroup %in% areas ~ get(!!nm) + 10,
.default = get(!!nm))
}
return(df1)
}
spp_area_wght_fun(spp_area_list, scheme = 4, wv = c(1,2,3,4,5,2))
spp_area_wght_fun <- function(df, scheme = 1, wv = c(1,2,4,6,8,2)){
nm <- paste0("scheme_",scheme)
areas <- c("Ecosystem","Community","Ramsar","Upstream")
if(scheme == 1 | scheme == 3){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Least Concern" &
classGroup %in% areas ~ wv[1] + 10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Near Threatened" &
classGroup %in% areas ~ wv[2] + 10 ,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Vulnerable" &
classGroup %in% areas ~ wv[3] + 10 ,
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Endangered" &
classGroup %in% areas ~ wv[4] + 10 ,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Critically Endangered" &
classGroup %in% areas ~ wv[5] + 10 ,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
threatStatus == "Data Deficient" &
classGroup %in% areas ~ wv[6] + 10 ,
.default = weight)) #%>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ get(!!weight)))
}
if(scheme == 2 |scheme == 4){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
.default = weight)) %>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ weight)) %>%
mutate({{nm}} := case_when(code == "8.1.1" | code == "8.1.2" ~ get(!!nm) + 1,
.default = get(!!nm))) %>%
mutate({{nm}} := case_when(classGroup %in% areas ~ get(!!nm) + 10,
.default = get(!!nm)))
}
return(df1)
}
spp_area_wght_fun(spp_area_list, scheme = 4, wv = c(1,2,3,4,5,2))
tt <- spp_area_wght_fun(spp_area_list, scheme = 4, wv = c(1,2,3,4,5,2))
View(tt)
spp_area_wght_fun <- function(df, scheme = 1, wv = c(1,2,4,6,8,2)){
nm <- paste0("scheme_",scheme)
areas <- c("Ecosystem","Community","Ramsar","Upstream")
if(scheme == 1 | scheme == 3){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Least Concern" &
classGroup %in% areas ~ wv[1] + 10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Near Threatened" &
classGroup %in% areas ~ wv[2] + 10 ,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Vulnerable" &
classGroup %in% areas ~ wv[3] + 10 ,
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Endangered" &
classGroup %in% areas ~ wv[4] + 10 ,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Critically Endangered" &
classGroup %in% areas ~ wv[5] + 10 ,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
threatStatus == "Data Deficient" &
classGroup %in% areas ~ wv[6] + 10 ,
.default = weight)) #%>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ get(!!weight)))
}
if(scheme == 2 |scheme == 4){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Least Concern" &
classGroup %in% areas ~ wv[1] + 10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Near Threatened" &
classGroup %in% areas ~ wv[2] + 10 ,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Vulnerable" &
classGroup %in% areas ~ wv[3] + 10 ,
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Endangered" &
classGroup %in% areas ~ wv[4] + 10 ,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Critically Endangered" &
classGroup %in% areas ~ wv[5] + 10 ,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
threatStatus == "Data Deficient" &
classGroup %in% areas ~ wv[6] + 10 ,
.default = weight)) %>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ weight)) %>%
mutate({{nm}} := case_when(code == "8.1.1" | code == "8.1.2" ~ get(!!nm) + 1,
.default = get(!!nm)))
}
return(df1)
}
tt <- spp_area_wght_fun(spp_area_list, scheme = 4, wv = c(1,2,3,4,5,2))
View(tt)
rm(list = ls())
## Load data
spp_list <- read.csv(here(dirname(here()), "data", "maxent_spp_list.csv"))
spp_area_list <- read.csv(here(dirname(here()), "data", "spp_area_list.csv"))
spp_wght_fun <- function(df, scheme = 1, wv = c(1,2,4,6,8,2)){
nm <- paste0("scheme_",scheme)
# using {{}} := allows you to reference a column name as a string
#https://stackoverflow.com/questions/73285003/how-do-i-pass-a-column-name-to-a-function-involving-mutate
if(scheme == 1 | scheme == 3){
df1 <- df %>%
mutate({{nm}} := case_when(redlistCategory == "Least Concern" ~ wv[1],
redlistCategory == "Near Threatened" ~ wv[2],
redlistCategory == "Vulnerable" ~ wv[3],
redlistCategory == "Endangered" ~ wv[4],
redlistCategory == "Critically Endangered" ~ wv[5],
redlistCategory == "Data Deficient" ~ wv[6]))
}
if(scheme == 2 | scheme == 4){
df1 <- df %>%
mutate({{nm}} := case_when(redlistCategory == "Least Concern" ~ wv[1],
redlistCategory == "Near Threatened" ~ wv[2],
redlistCategory == "Vulnerable" ~ wv[3],
redlistCategory == "Endangered" ~ wv[4],
redlistCategory == "Critically Endangered" ~ wv[5],
redlistCategory == "Data Deficient" ~ wv[6])) %>%
mutate({{nm}} := case_when(code == "8.1.1" | code == "8.1.2" ~ get(!!nm) + 1,
.default = get(!!nm)))
}
return(df1)
}
spp_area_wght_fun <- function(df, scheme = 1, wv = c(1,2,4,6,8,2)){
nm <- paste0("scheme_",scheme)
areas <- c("Ecosystem","Community","Ramsar","Upstream")
if(scheme == 1 | scheme == 3){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Least Concern" &
classGroup %in% areas ~ wv[1] + 10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Near Threatened" &
classGroup %in% areas ~ wv[2] + 10 ,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Vulnerable" &
classGroup %in% areas ~ wv[3] + 10 ,
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Endangered" &
classGroup %in% areas ~ wv[4] + 10 ,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Critically Endangered" &
classGroup %in% areas ~ wv[5] + 10 ,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
threatStatus == "Data Deficient" &
classGroup %in% areas ~ wv[6] + 10 ,
.default = weight)) #%>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ get(!!weight)))
}
if(scheme == 2 |scheme == 4){
df1 <- df %>%
mutate({{nm}} := case_when(threatStatus == "Least Concern" &
!classGroup %in% areas ~ wv[1],
threatStatus == "Least Concern" &
classGroup %in% areas ~ wv[1] + 10 ,
threatStatus == "Near Threatened" &
!classGroup %in% areas ~ wv[2],
threatStatus == "Near Threatened" &
classGroup %in% areas ~ wv[2] + 10 ,
threatStatus == "Vulnerable" &
!classGroup %in% areas ~ wv[3],
threatStatus == "Vulnerable" &
classGroup %in% areas ~ wv[3] + 10 ,
threatStatus == "Endangered" &
!classGroup %in% areas ~ wv[4],
threatStatus == "Endangered" &
classGroup %in% areas ~ wv[4] + 10 ,
threatStatus == "Critically Endangered" &
!classGroup %in% areas ~ wv[5],
threatStatus == "Critically Endangered" &
classGroup %in% areas ~ wv[5] + 10 ,
threatStatus == "Data Deficient" &
!classGroup %in% areas ~ wv[6],
threatStatus == "Data Deficient" &
classGroup %in% areas ~ wv[6] + 10 ,
.default = weight)) %>%
#mutate({{nm}} := case_when(classGroup %in% areas ~ weight)) %>%
mutate({{nm}} := case_when(code == "8.1.1" | code == "8.1.2" ~ get(!!nm) + 1,
.default = get(!!nm)))
}
return(df1)
}
spp_list <- spp_wght_fun(spp_list)
spp_area_list <- spp_area_wght_fun(spp_area_list)
## 2. Same threat ratings: IAS = threat + 1
spp_list <- spp_wght_fun(spp_list, scheme = 2)
spp_area_list <- spp_area_wght_fun(spp_area_list, scheme = 2)
## 3. Different threat ratings (1,2,3,4,5,2): no IAS
spp_list <- spp_wght_fun(spp_list, scheme = 3, wv = c(1,2,3,4,5,2))
spp_area_list <- spp_area_wght_fun(spp_area_list, scheme = 3, wv = c(1,2,3,4,5,2))
## 4. Different threat ratings (1,2,3,4,5,2): IAS = threat + 1
spp_list <- spp_wght_fun(spp_list, scheme = 4, wv = c(1,2,3,4,5,2))
spp_area_list <- spp_area_wght_fun(spp_area_list, scheme = 4, wv = c(1,2,3,4,5,2))
View(spp_area_list)
write.csv(spp_area_list, here(dirname(here()), "data", "spp_area_list_upd.csv"))
write.csv(spp_area_list, here(dirname(here()), "data", "spp_area_list_upd.csv"))
library(geodata)
tmin10 <- cmip6_world("CNRM-CM6-1", "585", "2061-2080",
var="tmin", res=10, path=here())
plot(tmin10)
tmin10
tmin10 <- cmip6_tile(model = "CNRM-CM6-1", ssp = "585", time = "2061-2080",
var="tmin", res=10, path=here(), lon = -50, lat = -60)
tmin10 <- cmip6_tile(model = "CNRM-CM6-1", ssp = "585", time = "2061-2080",
var="tmin", res=10, path=here(), lon = 0, lat = 0)
ssim_mat <- read.csv(here(dirname(here()), "data", "ssim", "ssim_mat.csv"), row.names = 1)
ssim_mat <- as.matrix(ssim_mat)
ssim_mat[upper.tri(ssim_mat)] <- t(ssim_mat)[upper.tri(ssim_mat)] #or make upper tri jaccard
col1 <- circlize::colorRamp2(c(0, 1), c("navy", "orange"))
col2 <- circlize::colorRamp2(c(0, 1), c("#643b9f", "lightblue"))
ht1 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col1,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_row_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
ht2 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
draw(ht1 + ht2, ht_gap = unit(-200, "mm"))
gc()
col2 <- circlize::colorRamp2(c(0,0.5, 1), c("gold", "#643b9f", "lightblue"))
ht2 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
draw(ht1 + ht2, ht_gap = unit(-200, "mm"))
col2 <- circlize::colorRamp2(c(0,0.1, 1), c("gold", "#643b9f", "lightblue"))
ht2 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
draw(ht1 + ht2, ht_gap = unit(-200, "mm"))
quantile(ssim_mat)
summary(ssim_mat)
col1 <- circlize::colorRamp2(c(0, 1), c("orange", "navy"))
col2 <- circlize::colorRamp2(c(0, 1), c("lightblue","#643b9f"))
ht1 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col1,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_row_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
ht2 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
draw(ht1 + ht2, ht_gap = unit(-200, "mm"))
Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = T,
cluster_columns = T,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
ht1 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col1,
cluster_rows = FALSE,
cluster_columns = T,
show_row_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i >= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
ht2 <- Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = T,
cluster_columns = FALSE,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
draw(ht1 + ht2, ht_gap = unit(-200, "mm"))
Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = T,
cluster_columns = FALSE,
show_column_names = F,
cell_fun = function(j, i, x, y, w, h, fill) {
if(i <= j) {
grid.rect(x, y, w, h, gp = gpar(fill = fill, col = fill))
}
})
Heatmap(ssim_mat,
rect_gp = gpar(type = "none"),
col = col2,
cluster_rows = T,
cluster_columns = FALSE,
show_column_names = F
)
Heatmap(ssim_mat
)
