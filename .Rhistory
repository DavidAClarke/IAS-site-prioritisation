# MR_KBA_prop <- multi_props(MR_KBA_vals, props)
# MR_RAN_prop <- multi_props(MR_RAN_vals, props)
BT_area_prop <- multi_props(BT_area_vals, props)
BT_area_KBA_prop <- multi_props(BT_area_KBA_vals, props)
BT_area_RAN_prop <- multi_props(BT_area_RAN_vals, props)
HA_area_prop <- multi_props(HA_area_vals, props)
HA_area_KBA_prop <- multi_props(HA_area_KBA_vals, props)
HA_area_RAN_prop <- multi_props(HA_area_RAN_vals, props)
PM_area_prop <- multi_props(PM_area_vals, props)
PM_area_KBA_prop <- multi_props(PM_area_KBA_vals, props)
PM_area_RAN_prop <- multi_props(PM_area_RAN_vals, props)
VG_area_prop <- multi_props(VG_area_vals, props)
VG_area_KBA_prop <- multi_props(VG_area_KBA_vals, props)
VG_area_RAN_prop <- multi_props(VG_area_RAN_vals, props)
DG_area_prop <- multi_props(DG_area_vals, props)
DG_area_KBA_prop <- multi_props(DG_area_KBA_vals, props)
DG_area_RAN_prop <- multi_props(DG_area_RAN_vals, props)
TB_area_prop <- multi_props(TB_area_vals, props)
TB_area_KBA_prop <- multi_props(TB_area_KBA_vals, props)
TB_area_RAN_prop <- multi_props(TB_area_RAN_vals, props)
PL_area_prop <- multi_props(PL_area_vals, props)
PL_area_KBA_prop <- multi_props(PL_area_KBA_vals, props)
PL_area_RAN_prop <- multi_props(PL_area_RAN_vals, props)
AM_area_prop <- multi_props(AM_area_vals, props)
AM_area_KBA_prop <- multi_props(AM_area_KBA_vals, props)
AM_area_RAN_prop <- multi_props(AM_area_RAN_vals, props)
MF_area_prop <- multi_props(MF_area_vals, props)
MF_area_KBA_prop <- multi_props(MF_area_KBA_vals, props)
MF_area_RAN_prop <- multi_props(MF_area_RAN_vals, props)
MD_area_prop <- multi_props(MD_area_vals, props)
MD_area_KBA_prop <- multi_props(MD_area_KBA_vals, props)
MD_area_RAN_prop <- multi_props(MD_area_RAN_vals, props)
LH_area_prop <- multi_props(LH_area_vals, props)
LH_area_KBA_prop <- multi_props(LH_area_KBA_vals, props)
LH_area_RAN_prop <- multi_props(LH_area_RAN_vals, props)
VV_area_prop <- multi_props(VV_area_vals, props)
VV_area_KBA_prop <- multi_props(VV_area_KBA_vals, props)
VV_area_RAN_prop <- multi_props(VV_area_RAN_vals, props)
BT_area_prop <- multi_props(BT_area_vals, props)
BT_area_KBA_prop <- multi_props(BT_area_KBA_vals, props)
BT_area_RAN_prop <- multi_props(BT_area_RAN_vals, props)
HA_area_prop <- multi_props(HA_area_vals, props)
HA_area_KBA_prop <- multi_props(HA_area_KBA_vals, props)
HA_area_RAN_prop <- multi_props(HA_area_RAN_vals, props)
pm_area_diff <- PM_area_prop - PM_area_KBA_prop
vg_area_diff <- VG_area_prop - VG_area_KBA_prop
dg_area_diff <- DG_area_prop - DG_area_KBA_prop
tb_area_diff <- TB_area_prop - TB_area_KBA_prop
pl_area_diff <- PL_area_prop - PL_area_KBA_prop
am_area_diff <- AM_area_prop - AM_area_KBA_prop
mf_area_diff <- MF_area_prop - MF_area_KBA_prop
md_area_diff <- MD_area_prop - MD_area_KBA_prop
lh_area_diff <- LH_area_prop - LH_area_KBA_prop
vv_area_diff <- VV_area_prop - VV_area_KBA_prop
bt_area_diff <- BT_area_prop - BT_area_KBA_prop
ha_area_diff <- HA_area_prop - HA_area_KBA_prop
Total_diff_area <- data.frame(rbind(pm_area_diff, vg_area_diff, dg_area_diff, tb_area_diff,
pl_area_diff, am_area_diff, mf_area_diff, md_area_diff,
lh_area_diff, vv_area_diff, bt_area_diff, ha_area_diff))
Species <- c("Pheidole megacephala", "Vespula germanica", "Digitonthophagus gazella",
"Tetramorium bicarinatum", "Paratrechina longicornis",
"Apis mellifera", "Monomorium floricola", "Monomorium destructor",
"Linepithema humile", "Vespula vulgaris", "Bombus terrestris",
"Heteronychus arator")
Total_diff_area <- data.frame(Species, Total_diff_area)
names(Total_diff_area) <- c("Species", "1.00","0.98","0.95","0.90","0.75","0.50","0.25", "0.00")
Total_diff_area <- Total_diff_area %>%
as_tibble() %>%
mutate(Species = factor(Species)) %>%
pivot_longer(cols = !Species,
names_to = "SiteSensitivity",
values_to = "ScenarioDifference") %>%
mutate(SiteSensitivity = as.double(SiteSensitivity))
library(tidyverse)
Total_diff_area <- data.frame(rbind(pm_area_diff, vg_area_diff, dg_area_diff, tb_area_diff,
pl_area_diff, am_area_diff, mf_area_diff, md_area_diff,
lh_area_diff, vv_area_diff, bt_area_diff, ha_area_diff))
Species <- c("Pheidole megacephala", "Vespula germanica", "Digitonthophagus gazella",
"Tetramorium bicarinatum", "Paratrechina longicornis",
"Apis mellifera", "Monomorium floricola", "Monomorium destructor",
"Linepithema humile", "Vespula vulgaris", "Bombus terrestris",
"Heteronychus arator")
Total_diff_area <- data.frame(Species, Total_diff_area)
names(Total_diff_area) <- c("Species", "1.00","0.98","0.95","0.90","0.75","0.50","0.25", "0.00")
Total_diff_area <- Total_diff_area %>%
as_tibble() %>%
mutate(Species = factor(Species)) %>%
pivot_longer(cols = !Species,
names_to = "SiteSensitivity",
values_to = "ScenarioDifference") %>%
mutate(SiteSensitivity = as.double(SiteSensitivity))
Total_diff_area <- Total_diff_area %>%
group_by(SiteSensitivity) %>%
mutate(mu = mean(ScenarioDifference)) %>%
mutate(sd = sqrt(var(ScenarioDifference)))
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference,
colour = Species)) +
geom_line(stat = "identity", size = 0.8) +
scale_colour_manual(values = pnw_palette("Starfish", 12, "continuous")) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
library(PNWColors)
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference,
colour = Species)) +
geom_line(stat = "identity", size = 0.8) +
scale_colour_manual(values = pnw_palette("Starfish", 12, "continuous")) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
??font
library(ggpubr)
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference,
colour = Species)) +
geom_line(stat = "identity", size = 0.8) +
scale_colour_manual(values = pnw_palette("Starfish", 12, "continuous")) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
#Mean difference among species
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
#Mean difference among species
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff_area, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1)
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff_area, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1)
props <- c(1, 0.98, 0.95, 0.90, 0.75, 0.50, 0.25, 0.00)
diffs <- c()
PM_spec_prop <- multi_props(PM_spec_vals, props)
PM_KBA_prop <- multi_props(PM_KBA_vals, props)
PM_RAN_prop <- multi_props(PM_RAN_vals, props)
VG_spec_prop <- multi_props(VG_spec_vals, props)
VG_KBA_prop <- multi_props(VG_KBA_vals, props)
VG_RAN_prop <- multi_props(VG_RAN_vals, props)
DG_spec_prop <- multi_props(DG_spec_vals, props)
DG_KBA_prop <- multi_props(DG_KBA_vals, props)
DG_RAN_prop <- multi_props(DG_RAN_vals, props)
TB_spec_prop <- multi_props(TB_spec_vals, props)
TB_KBA_prop <- multi_props(TB_KBA_vals, props)
TB_RAN_prop <- multi_props(TB_RAN_vals, props)
PL_spec_prop <- multi_props(PL_spec_vals, props)
PL_KBA_prop <- multi_props(PL_KBA_vals, props)
PL_RAN_prop <- multi_props(PL_RAN_vals, props)
AM_spec_prop <- multi_props(AM_spec_vals, props)
AM_KBA_prop <- multi_props(AM_KBA_vals, props)
AM_RAN_prop <- multi_props(AM_RAN_vals, props)
MF_spec_prop <- multi_props(MF_spec_vals, props)
MF_KBA_prop <- multi_props(MF_KBA_vals, props)
MF_RAN_prop <- multi_props(MF_RAN_vals, props)
MD_spec_prop <- multi_props(MD_spec_vals, props)
MD_KBA_prop <- multi_props(MD_KBA_vals, props)
MD_RAN_prop <- multi_props(MD_RAN_vals, props)
LH_spec_prop <- multi_props(LH_spec_vals, props)
LH_KBA_prop <- multi_props(LH_KBA_vals, props)
LH_RAN_prop <- multi_props(LH_RAN_vals, props)
VV_spec_prop <- multi_props(VV_spec_vals, props)
VV_KBA_prop <- multi_props(VV_KBA_vals, props)
VV_RAN_prop <- multi_props(VV_RAN_vals, props)
BT_spec_prop <- multi_props(BT_spec_vals, props)
BT_KBA_prop <- multi_props(BT_KBA_vals, props)
BT_RAN_prop <- multi_props(BT_RAN_vals, props)
HA_spec_prop <- multi_props(HA_spec_vals, props)
HA_KBA_prop <- multi_props(HA_KBA_vals, props)
HA_RAN_prop <- multi_props(HA_RAN_vals, props)
pm_diff <- PM_spec_prop - PM_KBA_prop
vg_diff <- VG_spec_prop - VG_KBA_prop
dg_diff <- DG_spec_prop - DG_KBA_prop
tb_diff <- TB_spec_prop - TB_KBA_prop
pl_diff <- PL_spec_prop - PL_KBA_prop
am_diff <- AM_spec_prop - AM_KBA_prop
mf_diff <- MF_spec_prop - MF_KBA_prop
md_diff <- MD_spec_prop - MD_KBA_prop
lh_diff <- LH_spec_prop - LH_KBA_prop
vv_diff <- VV_spec_prop - VV_KBA_prop
bt_diff <- BT_spec_prop - BT_KBA_prop
ha_diff <- HA_spec_prop - HA_KBA_prop
#Then just follow through like before but using these values
Total_diff <- data.frame(rbind(pm_diff, vg_diff, dg_diff, tb_diff, pl_diff,
am_diff, mf_diff, md_diff, lh_diff, vv_diff,
bt_diff, ha_diff))
Species <- c("Pheidole megacephala", "Vespula germanica", "Digitonthophagus gazella",
"Tetramorium bicarinatum", "Paratrechina longicornis",
"Apis mellifera", "Monomorium floricola", "Monomorium destructor",
"Linepithema humile", "Vespula vulgaris", "Bombus terrestris",
"Heteronychus arator")
Total_diff <- data.frame(Species, Total_diff)
names(Total_diff) <- c("Species", "1.00","0.98","0.95","0.90","0.75","0.50","0.25", "0.00")
Total_diff <- Total_diff %>%
as_tibble() %>%
mutate(Species = factor(Species)) %>%
pivot_longer(cols = !Species,
names_to = "SiteSensitivity",
values_to = "ScenarioDifference") %>%
mutate(SiteSensitivity = as.double(SiteSensitivity))
Total_diff <- Total_diff %>%
group_by(SiteSensitivity) %>%
mutate(mu = mean(ScenarioDifference)) %>%
mutate(sd = sqrt(var(ScenarioDifference)))
#Mean difference among species
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
props <- c(1, 0.98, 0.95, 0.90, 0.75, 0.50, 0.25, 0.00)
diffs <- c()
PM_area_prop <- multi_props(PM_area_vals, props)
PM_area_KBA_prop <- multi_props(PM_area_KBA_vals, props)
PM_area_RAN_prop <- multi_props(PM_area_RAN_vals, props)
VG_area_prop <- multi_props(VG_area_vals, props)
VG_area_KBA_prop <- multi_props(VG_area_KBA_vals, props)
VG_area_RAN_prop <- multi_props(VG_area_RAN_vals, props)
DG_area_prop <- multi_props(DG_area_vals, props)
DG_area_KBA_prop <- multi_props(DG_area_KBA_vals, props)
DG_area_RAN_prop <- multi_props(DG_area_RAN_vals, props)
TB_area_prop <- multi_props(TB_area_vals, props)
TB_area_KBA_prop <- multi_props(TB_area_KBA_vals, props)
TB_area_RAN_prop <- multi_props(TB_area_RAN_vals, props)
PL_area_prop <- multi_props(PL_area_vals, props)
PL_area_KBA_prop <- multi_props(PL_area_KBA_vals, props)
PL_area_RAN_prop <- multi_props(PL_area_RAN_vals, props)
AM_area_prop <- multi_props(AM_area_vals, props)
AM_area_KBA_prop <- multi_props(AM_area_KBA_vals, props)
AM_area_RAN_prop <- multi_props(AM_area_RAN_vals, props)
MF_area_prop <- multi_props(MF_area_vals, props)
MF_area_KBA_prop <- multi_props(MF_area_KBA_vals, props)
MF_area_RAN_prop <- multi_props(MF_area_RAN_vals, props)
MD_area_prop <- multi_props(MD_area_vals, props)
MD_area_KBA_prop <- multi_props(MD_area_KBA_vals, props)
MD_area_RAN_prop <- multi_props(MD_area_RAN_vals, props)
LH_area_prop <- multi_props(LH_area_vals, props)
LH_area_KBA_prop <- multi_props(LH_area_KBA_vals, props)
LH_area_RAN_prop <- multi_props(LH_area_RAN_vals, props)
VV_area_prop <- multi_props(VV_area_vals, props)
VV_area_KBA_prop <- multi_props(VV_area_KBA_vals, props)
VV_area_RAN_prop <- multi_props(VV_area_RAN_vals, props)
BT_area_prop <- multi_props(BT_area_vals, props)
BT_area_KBA_prop <- multi_props(BT_area_KBA_vals, props)
BT_area_RAN_prop <- multi_props(BT_area_RAN_vals, props)
HA_area_prop <- multi_props(HA_area_vals, props)
HA_area_KBA_prop <- multi_props(HA_area_KBA_vals, props)
HA_area_RAN_prop <- multi_props(HA_area_RAN_vals, props)
pm_area_diff <- PM_area_prop - PM_area_KBA_prop
vg_area_diff <- VG_area_prop - VG_area_KBA_prop
dg_area_diff <- DG_area_prop - DG_area_KBA_prop
tb_area_diff <- TB_area_prop - TB_area_KBA_prop
pl_area_diff <- PL_area_prop - PL_area_KBA_prop
am_area_diff <- AM_area_prop - AM_area_KBA_prop
mf_area_diff <- MF_area_prop - MF_area_KBA_prop
md_area_diff <- MD_area_prop - MD_area_KBA_prop
lh_area_diff <- LH_area_prop - LH_area_KBA_prop
vv_area_diff <- VV_area_prop - VV_area_KBA_prop
bt_area_diff <- BT_area_prop - BT_area_KBA_prop
ha_area_diff <- HA_area_prop - HA_area_KBA_prop
#Then just follow through like before but using these values
Total_diff_area <- data.frame(rbind(pm_area_diff, vg_area_diff, dg_area_diff, tb_area_diff,
pl_area_diff, am_area_diff, mf_area_diff, md_area_diff,
lh_area_diff, vv_area_diff, bt_area_diff, ha_area_diff))
Species <- c("Pheidole megacephala", "Vespula germanica", "Digitonthophagus gazella",
"Tetramorium bicarinatum", "Paratrechina longicornis",
"Apis mellifera", "Monomorium floricola", "Monomorium destructor",
"Linepithema humile", "Vespula vulgaris", "Bombus terrestris",
"Heteronychus arator")
Total_diff_area <- data.frame(Species, Total_diff_area)
names(Total_diff_area) <- c("Species", "1.00","0.98","0.95","0.90","0.75","0.50","0.25", "0.00")
Total_diff_area <- Total_diff_area %>%
as_tibble() %>%
mutate(Species = factor(Species)) %>%
pivot_longer(cols = !Species,
names_to = "SiteSensitivity",
values_to = "ScenarioDifference") %>%
mutate(SiteSensitivity = as.double(SiteSensitivity))
Total_diff_area <- Total_diff_area %>%
group_by(SiteSensitivity) %>%
mutate(mu = mean(ScenarioDifference)) %>%
mutate(sd = sqrt(var(ScenarioDifference)))
#Mean difference among species
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1)
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1))
df <- data.frame(xmin = c(1,0.98,0.95,0.9,0.75,0.5,0.25),
xmax = c(0.98,0.95,0.9,0.75,0.5,0.25,0),
ymin = rep(-Inf,7),
ymax = rep(Inf,7))
#Mean difference among species
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
#Mean difference among species
ggplot(Total_diff_area,
aes(x = SiteSensitivity,
y = ScenarioDifference)) +
geom_smooth(col = "black", fill = "black", alpha = 0.1) +
geom_smooth(data = Total_diff, aes(x = SiteSensitivity,
y = ScenarioDifference),
col = "purple", fill = "purple", alpha = 0.1) +
scale_x_continuous(expand = c(0,0),
limits = c(0,1)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.text = element_text(size = 14),
legend.title = element_text(size = 14, face = "bold")) +
geom_hline(yintercept = 0) +
geom_rect(data = df, aes(xmin = rev(xmin), xmax = rev(xmax), ymin=ymin, ymax=ymax),
fill = leg$colors, alpha = 0.2, inherit.aes = F) +
font("legend.text", face = "italic") +
ylab("Scenario difference in distribution coverage") +
xlab("Site sensitivity")
library(here)
??getData
?project
library(terra)
?project
install.packages("geodata")
## Load libraries
pkgs <- c("tidyverse", "sp", "sf", "raster", "data.table", "CoordinateCleaner",
"countrycode", "MASS")
lapply(pkgs, require, character.only = T)
install.packages("taxize")
